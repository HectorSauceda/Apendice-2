std::cout << "Press '1' to start and connect to the EmoEngine" << std::endl; std::cout << "Press '2' to connect to the EmoComposer"<< std::endl; std::cout << ">> "; std::getline(std::cin, input, '\n'); option = atoi(input.c_str());
switch (option) { case 1: { if (IEE_EngineConnect() != EDK_OK) { throw std::runtime_error("Emotiv Driver start up failed."); }
break;
} case 2: { std::cout << "Target IP of EmoComposer? [127.0.0.1] "; std::getline(std::cin, input, '\n');
if (input.empty()) { input = std::string("127.0.0.1"); }
if (IEE_EngineRemoteConnect(input.c_str(), composerPort) != EDK_OK) { std::string errMsg = "Cannot connect to EmoComposer on [" + input + "]"; throw std::runtime_error(errMsg.c_str()); } break; } default: throw std::runtime_error("Invalid option..."); break; } }
